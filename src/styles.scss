/* Tailwind directives  */
@tailwind base;
@tailwind components;
@tailwind utilities;

/* You can add global styles to this file, and also import other style files */
:root {
  /* font-family: Inter, Avenir, Helvetica, Arial, sans-serif; */
  font-size: 16px;
  line-height: 24px;
  font-weight: 400;
  font-family: "Space Grotesk", sans-serif;
}

.markdown-content h1 {
  @apply text-4xl font-extrabold text-gray-900 mb-4 dark:text-gray-100;
}

.markdown-content h2 {
  @apply text-3xl font-semibold text-gray-800 mt-8 mb-4 dark:text-gray-200;
}

.markdown-content h3 {
  @apply text-2xl font-medium text-gray-800 mt-6 mb-3 dark:text-gray-200;
}

.markdown-content p {
  @apply text-base leading-relaxed text-gray-700 mb-4 dark:text-gray-400;
}

.markdown-content a {
  @apply text-blue-600 hover:text-blue-800 hover:underline dark:text-blue-400 dark:hover:text-blue-600;
}

.markdown-content ul,
.markdown-content ol {
  @apply ml-6 mb-4;
}

.markdown-content ul {
  @apply list-disc;
}

.markdown-content pre {
  font-size: 0.8rem;
  background: #2d2d2d;
  padding: 1em;
  margin: 0.5em 0;
  overflow: auto;
  color: #ccc;
  text-align: left;
  white-space: pre-wrap; /* Allow wrapping */
  word-break: break-word; /* Break long words */
  line-height: 1.5;
  -moz-tab-size: 4;
  -o-tab-size: 4;
  tab-size: 4;
  -webkit-hyphens: none;
  hyphens: none;
  max-width: 100%; /* Ensure it doesn't overflow */
  box-sizing: border-box; /* Include padding in width calculations */
}

.markdown-content pre.code {
  margin: 20px 25px;
  border-radius: 4px;
  border: 1px solid #292929;
  position: relative;
}
/* Syntax highlighting */
.markdown-content pre .keyword {
  color: #c5a5c5; /* Keywords like 'function', 'return' */
}

.markdown-content pre .string {
  color: #8dc891; /* Strings */
}

.markdown-content pre .comment {
  color: #7a7a7a; /* Comments */
  font-style: italic;
}

.markdown-content pre .number {
  color: #dcdcaa; /* Numbers */
}

.markdown-content pre .operator {
  color: #e5e5e5; /* Operators like '=', '+' */
}

.markdown-content pre .function {
  color: #79b6f2; /* Function names */
}

.markdown-content pre .punctuation {
  color: #cccccc; /* Punctuation like '{', '(', ')' */
}

.markdown-content pre .variable {
  color: #d7ba7d; /* Variables */
}
.markdown-content ol {
  @apply list-decimal;
}

.markdown-content blockquote {
  @apply pl-4 border-l-4 border-gray-300 italic text-gray-700 mb-6 dark:border-gray-600 dark:text-gray-300;
}

.markdown-content img {
  max-width: 100%;
  border-radius: 0.5rem;
}

.markdown-content table {
  @apply min-w-full divide-y divide-gray-200 my-3 dark:divide-gray-600;
}

.markdown-content th,
.markdown-content td {
  @apply px-6 py-3 text-left text-sm font-medium text-gray-900 dark:text-gray-100;
}

.markdown-content thead {
  @apply bg-gray-50 dark:bg-gray-800;
}

.markdown-content tbody tr:nth-child(odd) {
  @apply bg-gray-100 dark:bg-gray-900;
}

.markdown-content tbody tr:nth-child(even) {
  @apply bg-white dark:bg-gray-800;
}
@media (max-width: 768px) {
  .markdown-content table {
  }

  .markdown-content th,
  .markdown-content td {
    @apply px-0;
  }
}
.main-section::after {
  content: "";
  position: absolute;
  top: 20px;
  right: 60px;
  width: 14vmin;
  height: 14vmin;

  background-image: url("/Dots.png");
  background-size: cover; /* Adjust to cover or contain based on your needs */
  background-position: center;
  background-repeat: no-repeat;
  /* Adjust opacity as needed */
  z-index: -1; /* Ensure it's behind other content */
}
.main-heading::after {
  content: "";
  position: absolute;
  top: 0px;
  left: 60px;
  width: 53px;
  height: 53px;

  background-image: url("/Logo.png");
  background-size: cover; /* Adjust to cover or contain based on your needs */
  background-position: center;
  background-repeat: no-repeat;
  /* Adjust opacity as needed */
  z-index: -1; /* Ensure it's behind other content */
}
.about-section::after {
  content: "";
  position: absolute;
  top: 120px;
  right: 60px;
  width: 93px;
  height: 93px;

  background-image: url("/Dots.png");
  background-size: cover; /* Adjust to cover or contain based on your needs */
  background-position: center;
  background-repeat: no-repeat;
  /* Adjust opacity as needed */
  z-index: -1; /* Ensure it's behind other content */
}
.about-section::before {
  content: "";
  position: absolute;
  bottom: 200px;
  right: 280px;
  width: 63px;
  height: 63px;

  background-image: url("/Logo.png");
  background-size: cover; /* Adjust to cover or contain based on your needs */
  background-position: center;
  background-repeat: no-repeat;
  /* Adjust opacity as needed */
  z-index: -1; /* Ensure it's behind other content */
}
.animated {
  background-size: 2rem 2rem;
  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;
  white-space: nowrap;
}

@keyframes animation-15lk19q {
  0% {
    background-position: 0 0;
  }
  100% {
    background-position: 2rem 4rem;
  }
}
.animated:hover {
  background-image: linear-gradient(
    135deg,
    rgba(0, 0, 0, 0.1) 25%,
    transparent 25%,
    transparent 50%,
    rgba(0, 0, 0, 0.1) 50%,
    rgba(0, 0, 0, 0.1) 75%,
    transparent 75%,
    transparent
  );
  background-position: right center;
  animation: animation-15lk19q 2.8s linear 0s infinite normal none running;
}

/* For Firefox */
html {
  box-sizing: border-box;
  scrollbar-width: thin;
  scrollbar-color: #6d28d9 rgb(31, 41, 55); /* thumb color and track color */
  /* For Chrome, Safari, and other WebKit browsers */
  ::-webkit-scrollbar {
    width: 12px;
  }

  ::-webkit-scrollbar-track {
    background: rgb(31, 41, 55);
    border-radius: 10px;
    box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
  }

  ::-webkit-scrollbar-thumb {
    background: #eab308;
    border-radius: 10px;
    background: #6d28d9;
  }
}
@media (prefers-color-scheme: dark) {
  ::-webkit-scrollbar-thumb {
    background: #eab308;
  }
  ::-webkit-scrollbar-track {
    background: #fff;
    border-radius: 10px;
    box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
  }
  /* For Firefox */
  html {
    scrollbar-width: thin;
    scrollbar-color: #eab308 #fff;
  }
}
.two-lines {
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: normal;
}
.three-lines {
  display: -webkit-box;
  -webkit-line-clamp: 3;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: normal;
}
.area {
  width: 100%;
}

.circles {
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;

  li {
    position: absolute;
    display: block;
    list-style: none;
    width: 20px;
    height: 20px;
    background: rgba(0, 0, 0, 0.2);
    animation: animate 25s linear infinite;
    bottom: -150px;

    @for $i from 1 through 10 {
      &:nth-child(#{$i}) {
        @if $i == 1 {
          left: 25%;
          width: 100px;
          height: 100px;
          clip-path: polygon(50% 0%, 0% 100%, 100% 100%);
          animation-delay: 0s;
        } @else if $i == 2 {
          left: 10%;
          width: 40px;
          height: 40px;
          clip-path: polygon(50% 0%, 0% 100%, 100% 100%);
          animation-delay: 2s;
          animation-duration: 12s;
        } @else if $i == 3 {
          left: 70%;
          width: 50px;
          height: 50px;
          clip-path: circle(50% at 50% 50%);
          animation-delay: 4s;
        } @else if $i == 4 {
          left: 40%;
          width: 60px;
          height: 60px;
          clip-path: polygon(50% 0%, 100% 38%, 81% 100%, 19% 100%, 0% 38%);
          animation-delay: 0s;
          animation-duration: 18s;
        } @else if $i == 5 {
          left: 65%;
          width: 30px;
          height: 30px;
          clip-path: polygon(25% 100%, 0% 61%, 50% 0%, 100% 61%, 75% 100%);
          animation-delay: 0s;
        } @else if $i == 6 {
          left: 75%;
          width: 110px;
          height: 110px;
          clip-path: ellipse(50% 30% at 50% 50%);
          animation-delay: 3s;
        } @else if $i == 7 {
          left: 35%;
          width: 150px;
          height: 150px;
          clip-path: polygon(
            50% 0%,
            61% 35%,
            98% 35%,
            68% 57%,
            79% 91%,
            50% 70%,
            21% 91%,
            32% 57%,
            2% 35%,
            39% 35%
          );
          animation-delay: 7s;
        } @else if $i == 8 {
          left: 50%;
          width: 25px;
          height: 25px;
          clip-path: polygon(0% 0%, 100% 0%, 50% 100%);
          animation-delay: 15s;
          animation-duration: 45s;
        } @else if $i == 9 {
          left: 20%;
          width: 40px;
          height: 40px;
          clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);
          animation-delay: 2s;
          animation-duration: 35s;
        } @else if $i == 10 {
          left: 85%;
          width: 150px;
          height: 150px;
          clip-path: polygon(50% 0%, 0% 100%, 100% 100%);
          animation-delay: 0s;
          animation-duration: 11s;
        }
      }
    }
  }
}

@keyframes animate {
  0% {
    transform: translateY(0) rotate(0deg);
    opacity: 1;
    border-radius: 0;
  }

  100% {
    transform: translateY(-1000px) rotate(720deg);
    opacity: 0;
    border-radius: 50%;
  }
}
.logo__image {
  height: 65px;
  width: 65px;
  padding: 6px;
  border-radius: 50%;
  border: 8px solid #eab308;
  transition: transform 0.4s ease, border-color 0.4s ease,
    border-width 0.4s ease, box-shadow 0.4s ease, filter 0.4s ease;
  &:hover {
    transform: scale(1.2) rotate(5deg);
    border-color: rgb(255, 223, 0);
    border-width: 12px;
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.25), 0 0 10px rgba(234, 179, 8, 0.5);
    filter: brightness(1.1) contrast(1.2);
  }
  &:focus {
    outline: 2px solid rgba(249, 215, 47, 0.5);
    outline-offset: 4px;
  }
}
.transition-transform {
  transition: transform 0.3s ease;
}

.transition-opacity {
  transition: opacity 0.5s ease;
}

.transform-gpu {
  transform: translate3d(0, 0, 0);
}
.media-header {
  position: fixed;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  left: 18px;
  gap: 8px;
  top: 0px;
  @media (max-width: 768px) {
    display: none;
  }
}

footer {
  height: 140px;
}

.mobile-min-height {
  min-height: calc(100vh - 140px - 130px);
}

dl {
  @apply border border-gray-300 px-2 mb-3 items-center;
  height: 50px;
}
dt {
  @apply border-r border-gray-300 pr-4 flex items-center;
  height: 50px;
}
.accordion-content {
  overflow: hidden;
  max-height: 0;
  opacity: 0;
  transition: max-height 0.5s ease, opacity 0.5s ease;
}
.flex-1 {
  flex: 1;
}
.text-right {
  text-align: right;
}
.accordion-content.open {
  max-height: 3000px;
  opacity: 1;
}
.accordion-icon {
  transition: transform 0.3s ease;
  display: inline-block;
}

.accordion-icon.open {
  transform: rotate(90deg);
}
.menu-enter {
  opacity: 0;
  transform: translateY(-20px);
  transition: all 0.3s ease-out;
}

.menu-enter-active {
  opacity: 1;
  transform: translateY(0);
}

.menu-exit {
  opacity: 1;
  transform: translateY(0);
  transition: all 0.3s ease-out;
}

.menu-exit-active {
  opacity: 0;
  transform: translateY(-20px);
}
.animated-heading span {
  animation: fadeIn 2s ease-in-out;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

/**
 * `@property` is required for the animation to work.
 * Without it, the angle values won’t interpolate properly.
 *
 * @see https://dev.to/afif/we-can-finally-animate-css-gradient-kdk
 */
@property --bg-angle {
  inherits: false;
  initial-value: 0deg;
  syntax: "<angle>";
}

/**
 * To animate the gradient, we set the custom property to 1 full
 * rotation. The animation starts at the default value of `0deg`.
 */
@keyframes spin {
  to {
    --bg-angle: 360deg;
  }
}

.animated-border {
  /* add the animation, but pause it by default */
  animation: spin 2.5s infinite linear paused;

  /**
   * Using `background-origin` we can create a “border” using two gradients. And to
   * make the gradients better-looking, we use OKLCH.
   *
   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/background-origin
   * @see https://evilmartians.com/chronicles/oklch-in-css-why-quit-rgb-hsl
   */
  background:
      /* Background colors don’t work with `background-origin`, so use a gradient. */ linear-gradient(
        to bottom,
        oklch(100% 3.5594404384177905e-8 106.37411429114086),
        oklch(100% 3.5594404384177905e-8 106.37411429114086)
      )
      padding-box,
    /* ends at inner border edges */
      conic-gradient(
        from var(--bg-angle),
        oklch(95% 0 0) 0%,
        oklch(95% 0 0 / 0.3) 100%
      )
      border-box; /* extends to outer border edges */

  /* a clear border lets the background gradient shine through */
  border: 1px solid transparent;
  transition: transform 0.4s ease, box-shadow 0.4s ease;
  /* unpause the animation on hover */
  &:hover {
    animation-play-state: running;

    box-shadow: 0 0 10px rgba(0, 0, 0, 0.15), 0 0 20px rgba(255, 255, 255, 0.3);
  }
  .dark & {
    background: linear-gradient(
          to bottom,
          oklch(27.81% 0.03 256.85),
          oklch(27.81% 0.03 256.85)
        )
        padding-box,
      conic-gradient(
          from var(--bg-angle) in oklch longer hue,
          oklch(0.85 0.37 0) 0 0
        )
        border-box;
  }
}
